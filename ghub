#!/bin/bash
#
# Robert Nowotniak 2020 <rnowotniak@gmail.com>
#

token=$(cat .token)


list() {
	curl -s -H "Authorization: token $(cat .token)" https://api.github.com/user/repos | jq -r '.[].name'
	exit 0
}

help() {
	echo "Usage:"
	echo -e "\t$0  -h | help"
	echo -e "\t$0 [ list ]"
	echo -e "\t$0 create [ -d <description> ] [ -p ] <repo_name>"
	echo -e "\t            -p  means create a public repository (private is the default)"
	echo -e "\t$0 delete <repo_name> [ <repo_name> ... ]"
	echo -e "\t$0 info <repo_name> [ <repo_name> ... ]"
	echo
	exit 1
}

create() {
	private=true
	while getopts ":d:p" o; do
		case "$o" in
			d)
				description=$OPTARG
			;;
			p)
				private=false
			;;
			*)
				help
			;;
		esac
	done
	shift $((OPTIND-1))
	if [ "$#" -ne 1 ]; then
		help
	fi
	repo="$1"
	curl -s -H "Authorization: token $(cat .token)" \
		-d "{\"name\":\"${repo}\",\"description\":\"${description}\",\"private\":${private}}" \
		https://api.github.com/user/repos | jq -r '.html_url'
	exit 0
}

delete() {
	if [ "$#" -lt 1 ]; then
		help
	fi
	owner=$(curl -s -H "Authorization: token $(cat .token)" https://api.github.com/user | jq -r '.login')
	[ "$owner" ] || exit 1

	for repo in "$@"; do 
		curl -s -H "Authorization: token $(cat .token)" \
			-X DELETE \
			https://api.github.com/repos/"$owner"/"$repo" | jq -r '.message'
	done
	exit 0
}

info() {
	if [ "$#" -lt 1 ]; then
		help
	fi
	owner=$(curl -s -H "Authorization: token $(cat .token)" https://api.github.com/user | jq -r '.login')
	[ "$owner" ] || exit 1

	for repo in "$@"; do 
		curl -s -H "Authorization: token $(cat .token)" \
			https://api.github.com/repos/"$owner"/"$repo"
	done
}

while getopts "h" o; do
	case "$o" in
		h)
			help
		;;
		*)
			help
		;;
	esac
done
shift $((OPTIND-1))

case "$1" in
	"list" | "" )
		list
	;;
	"create" )
		shift
		create "$@"
	;;
	"delete" )
		shift
		delete "$@"
	;;
	"info" )
		shift
		info "$@"
	;;
	"help"|*)
		help
	;;
esac

